clear L
deg = pi/180;

L(1) = Revolute('d', 1, 'a', 0, 'alpha', pi/2, ...
    'I', [0, 0.35, 0], ...
    'r', [0, 0, 0], ...
    'm', 0, ...
    'Jm', 1e-4, ...
    'G', 500, ...
    'B', 10e-4, ...
    'Tc', [0.395 -0.435], ...
    'qlim', [-180 180]*deg );

L(2) = Revolute('d', 0, 'a', 1, 'alpha', 0, ...
    'I', [0.13, 0.524, 0.539], ...
    'r', [-0.3638, 0.006, 0.2275], ...
    'm', 10, ...
    'Jm', 1e-4, ...
    'G', 500, ...
    'B', 10e-4, ...
    'Tc', [0.126 -0.071], ...
    'qlim', [-90 90]*deg );

L(3) = Revolute('d', 0, 'a', 1, 'alpha', 0, ...
    'I', [0.13, 0.524, 0.539, 0, 0, 0], ...
    'r', [-0.3638, 0.006, 0.2275], ...
    'm', 10, ...
    'Jm', 1e-4, ...
    'G', 500, ...
    'B', 10e-4, ...
    'Tc', [0.126 -0.071], ...
    'qlim', [-90 90]*deg );


p560 = SerialLink(L, 'name', 'RRR robot', ...
    'manufacturer', 'Unimation', 'ikine', 'puma', 'comment', 'viscous friction; params of 8/95');


p560.model3d = 'UNIMATE/puma560';

%
% some useful poses
%

home_pos = [0 pi/2 0];
hold_pos = [0 0 0];
qz = [0 0 0]; % zero angles, L shaped pose
qr = [0 pi/2 -pi/2]; % ready pose, arm up
qs = [0 0 -pi/2];
qn=[0 pi/4 pi];


clear L
%p560.plot(home_pos);
%p560.plot(hold_pos);
p560.teach();